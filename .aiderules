# Pantry Pirate Radio System Context

## Overview
Build a food security data aggregation system using Python/FastAPI that implements the OpenReferral Human Services Data Specification (HSDS). The system focuses on making public resources truly accessible while maintaining data privacy and ethical aggregation practices. See architecture in docs/architecture.md and API specification in docs/api.md.

### Code Quality
- Python 3.11+
- Type hints required (strict mypy)
- 90% minimum test coverage
- Black formatting (88 char limit)
- Ruff linting
- Google-style docstrings
- No circular dependencies
- No global state

### Testing
- pytest for all tests
- Property-based testing with hypothesis
- Docker-based integration tests
- OpenAPI validation tests
- Performance benchmarks
- See test examples in docs/architecture.md

### Development Process
1. Write failing tests
2. Implement minimum code
3. Pass type checking
4. Refactor and document
5. Review and commit

### Tools & Configuration
- Pre-commit hooks (black, ruff, mypy, pytest)
- Docker multi-stage builds
- Prometheus metrics
- PostgreSQL with PostGIS
- Redis caching
- HTTPX for async
- SQLAlchemy 2.0

### References
- HSDS Repo and Docs: docs/HSDS/
- llama.cpp-python-bindngs: docs/llama
- Architecture: docs/architecture.md
- API Specification: docs/api.md
- Implementation Tasks: docs/implementation-tasks.python.md

Make sure all CI checks pass before commit. run sh scripts/run-ci-checks.sh