name: pantry-pirate-radio-test

services:
  test_db:
    image: postgis/postgis:15-3.3
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_TEST_PASSWORD:-test}
      - POSTGRES_DB=${POSTGRES_TEST_DB:-test_pantry_pirate_radio}
    tmpfs:
      - /var/lib/postgresql/data
    ports:
      - "0:5432"  # Random port allocation
    volumes:
      - ./docs/HSDS/database/database_postgresql.sql:/docker-entrypoint-initdb.d/01-hsds-schema.sql:ro
      - ./init-scripts/01-init-db.sql:/docker-entrypoint-initdb.d/02-init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 5
      start_period: 2s
    platform: linux/amd64

  test_cache:
    image: redis:7-alpine
    ports:
      - "0:6379"  # Random port allocation
    command: redis-server
    tmpfs:
      - /data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 2s
      timeout: 2s
      retries: 5
      start_period: 2s

  test_app:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    volumes:
      - .:/workspace
    environment:
      - PYTHONPATH=/workspace
      - DATABASE_URL=${TEST_DATABASE_URL:-postgresql+asyncpg://postgres:${POSTGRES_TEST_PASSWORD:-test}@test_db:5432/${POSTGRES_TEST_DB:-test_pantry_pirate_radio}}
      - REDIS_URL=${TEST_REDIS_URL:-redis://test_cache:6379/0}
      - DEBUG=1
      - TESTING=1
    depends_on:
      test_db:
        condition: service_healthy
      test_cache:
        condition: service_healthy
